@model Products
@*представлениe редактирования*@

@{
    ViewBag.Title = "Edit Products";
    Layout = "_AdminLayout";
}

<form asp-action="Edit" method="post">
    <input type="hidden" asp-for="ProductID" />
    <div class="form-group">
        <label asp-for="Name"></label>
        <div>
            <span asp-validation-for="Name" class="text-danger"></span>
        </div>
        <input asp-for="Name" class="form-control" />
    </div>
    <div class="form-group">
        <label asp-for="Description"></label>
        <div>
            <span asp-validation-for="Description" class="text-danger"></span>
        </div>
<textarea asp-for="Description" class="form-control"></textarea>
    </div>
    <div class="form-group">
        <label asp-for="Category"></label>
        <div>
            <span asp-validation-for="Category" class="text-danger"></span>
        </div>
        <input asp-for="Category" class="form-control" />
    </div>
    <div class="form-group">
        <label asp-for="Price"></label>
        <div>
            <span asp-validation-for="Price" class="text-danger"></span>
        </div>
        <input asp-for="Price" class="form-control" />
    </div>
    <div class="text-center">
        <button class="btn btn-primary" type="submit">Save</button>
        <a asp-action="Index" class="btn btn-default">Cancel</a>
    </div>
</form>

@*В представлении имеется форма HTML, большая часть содержимого которой гене­
                        рируется посредством дескрипторньrх вспомогательных классов, включая установку
                        целей для элементов form и а, установку содержимого элементов label и выдачу ат­
                        рибутов name, id и value для элементов input и textarea.

                         Скрытый элемент input для свойства ProductID применяется ради простоты.
                    Значение ProductID генерируется базой данных как первичный ключ, когда новый объ­
                    ект сохраняется инфраструктурой Eпtity Framework Сoге, и его безопасное изменение мо­
                    жет оказаться сложным процессом.

            //--------------------------------------------------------------------------------
                обработка asp-validation-for
                На свойства в вклассе Products мы повесили атрибуты с обработки ошибок , в Edit мы вешаем
                атрибут asp-validation-for который применяется к элементу span, он использу­
                ет дескрипторный вспомогательный класс, который добавляет сообщение об ошибке
                проверки достоверности для указанного свойства, если при проверке возникли кюше­
                то проблемы.
                Дескрипторные вспомогательные классы будут вставлять сообщение об ошиб­
                ке в элемент span и добавлять элемент в класс input-validation- error, кото­
                рый позволит легко применять стили CSS к элементам с сообщениями об ошибках.
            Дескрипторные вспомогательные классы для сообщений проверки достоверности
        можно применять где угодно в представлении , но по соглашению (и это вполне разум­
        но) принято размещать их поближе к проблемному элементу, чтобы ввести пользова­
        теля в 1typc дела.

        Именно потому разработчики часто предпочитают выполнять проверку достовер­
    ности на стороне клиента и на стороне сервера (для уеньшения кол-ва запросов к серверу и 
    проверка данных на достоверность на стороне сервера - предварительная проверка на сороне клиента), 
    на стороне клиента данные проверяются в браузере с исполь­
    зованием JavaScript. Приложения MVC могут выполнять проверку достоверности на
    стороне миента на основе аннотаций данных, применяемых к классу модели пред­
    метной области.
    Прежде всего, понадобится добавить библиотеки JavaScript, которые предоставят
    приложению средство проверки достоверности на стороне клиента,*@